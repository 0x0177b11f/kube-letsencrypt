---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: letsencrypt-certs-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["update", "patch"]
---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: default
  name: letsencrypt-certs-updater
automountServiceAccountToken: true
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: letsencrypt-certs-binding
subjects:
- kind: ServiceAccount
  name: letsencrypt-certs-updater
  namespace: default
roleRef:
  kind: Role
  name: letsencrypt-certs-role
  apiGroup: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: letsencrypt-certs
type: Opaque
# Create an empty secret (with no data) in order for the update to work
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: letsencrypt-job
  labels:
    app: letsencrypt
spec:
  schedule: "0 0 25 */2 *"
  jobTemplate:
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: 120
      template:
        metadata:
          name: letsencrypt
          labels:
            app: letsencrypt
        spec:
          serviceAccountName: letsencrypt-certs-updater
          containers:
          - image: quay.io/0x0177b11f/kube-letsencrypt:latest
            name: letsencrypt
            imagePullPolicy: Always
            ports:
            - name: letsencrypt
              containerPort: 80
            env:
            - name: DOMAINS
              value: demo.example.com
            - name: EMAIL
              value: demo@example.com
            - name: SECRET
              value: letsencrypt-certs
            - name: STAGING
              value: "1"
          restartPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  name: letsencrypt
spec:
  selector:
    app: letsencrypt
  ports:
  - protocol: "TCP"
    port: 80
